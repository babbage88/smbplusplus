// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package smbplusplus_db

import (
	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type AppPermission struct {
	ID                    uuid.UUID
	PermissionName        string
	PermissionDescription pgtype.Text
}

type AuthToken struct {
	ID           uuid.UUID
	UserID       uuid.UUID
	Token        pgtype.Text
	Expiration   pgtype.Timestamp
	CreatedAt    pgtype.Timestamptz
	LastModified pgtype.Timestamptz
}

type GooseDbVersion struct {
	ID        int32
	VersionID int64
	IsApplied bool
	Tstamp    pgtype.Timestamp
}

type HealthCheck struct {
	ID           uuid.UUID
	Status       pgtype.Text
	CheckType    pgtype.Text
	CreatedAt    pgtype.Timestamptz
	LastModified pgtype.Timestamptz
}

type RolePermissionMapping struct {
	ID           uuid.UUID
	RoleID       uuid.UUID
	PermissionID uuid.UUID
	Enabled      bool
	CreatedAt    pgtype.Timestamptz
	LastModified pgtype.Timestamptz
}

type RolePermissionsView struct {
	RoleId       uuid.UUID
	Role         string
	PermissionId pgtype.UUID
	Permission   pgtype.Text
}

type S3Bucket struct {
	ID           uuid.UUID
	ProviderName string
	UiUrl        pgtype.Text
	AdminUrl     pgtype.Text
}

type SquaredShare struct {
	ID         uuid.UUID
	S3BucketID pgtype.UUID
	LocalPath  string
	SmbPath    pgtype.Text
	QuotaSize  pgtype.Text
}

type User struct {
	ID           uuid.UUID
	Username     pgtype.Text
	Password     pgtype.Text
	Email        pgtype.Text
	CreatedAt    pgtype.Timestamptz
	LastModified pgtype.Timestamptz
	Enabled      bool
	IsDeleted    bool
}

type UserPermissionsView struct {
	UserId       pgtype.UUID
	Username     pgtype.Text
	PermissionId pgtype.UUID
	Permission   pgtype.Text
	Role         pgtype.Text
	LastModified pgtype.Timestamptz
}

type UserRole struct {
	ID              uuid.UUID
	RoleName        string
	RoleDescription pgtype.Text
	CreatedAt       pgtype.Timestamptz
	LastModified    pgtype.Timestamptz
	Enabled         bool
	IsDeleted       bool
}

type UserRoleMapping struct {
	ID           uuid.UUID
	UserID       uuid.UUID
	RoleID       uuid.UUID
	Enabled      bool
	CreatedAt    pgtype.Timestamptz
	LastModified pgtype.Timestamptz
}

type UserRolesActive struct {
	RoleId          uuid.UUID
	RoleName        string
	RoleDescription pgtype.Text
	CreatedAt       pgtype.Timestamptz
	LastModified    pgtype.Timestamptz
	Enabled         bool
	IsDeleted       bool
}

type UsersAudit struct {
	AuditID   int32
	UserID    pgtype.UUID
	Username  pgtype.Text
	Email     pgtype.Text
	DeletedAt pgtype.Timestamptz
	DeletedBy pgtype.Text
}

type UsersWithRole struct {
	ID           uuid.UUID
	Username     pgtype.Text
	Password     pgtype.Text
	Email        pgtype.Text
	Roles        []string
	RoleIds      uuid.UUIDs
	CreatedAt    pgtype.Timestamptz
	LastModified pgtype.Timestamptz
	Enabled      bool
	IsDeleted    bool
}
